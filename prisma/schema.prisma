generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Section {
  id          String       @id @default(uuid())
  name        String
  isPublished Boolean      @default(false)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  fields      Field[]      @relation("SectionToFields")
  logicFields LogicField[] @relation("SectionToLogicFields")
}

model Field {
  id          String   @id @default(uuid())
  name        String
  sectionId   String
  type        String // "number" | "text" | "select" | "checkbox"
  required    Boolean  @default(false)
  enabled     Boolean  @default(true)
  options     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  section     Section  @relation("SectionToFields", fields: [sectionId], references: [id], onDelete: Cascade)
  logicValues String?
}

model LogicField {
  id           String        @id @default(uuid())
  name         String
  sectionId    String
  section      Section       @relation("SectionToLogicFields", fields: [sectionId], references: [id], onDelete: Cascade)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  logicValues  String?
  calculations Calculation[] @relation("LogicFieldToCalculations")
}

model Calculation {
  id         String     @id @default(uuid())
  logicId    String
  type       String // "simple" | "conditional"
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  logicField LogicField @relation("LogicFieldToCalculations", fields: [logicId], references: [id], onDelete: Cascade)
  operations String     @default("[]")
}
