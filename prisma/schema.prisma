generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Section {
  id          String       @id @default(uuid())
  name        String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  fields      Field[]
  logicFields LogicField[]
}

model Field {
  id          String   @id @default(uuid())
  name        String
  sectionId   String
  type        String // "number" | "text" | "select" | "checkbox"
  required    Boolean  @default(false)
  enabled     Boolean  @default(true)
  options     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  section     Section  @relation(fields: [sectionId], references: [id])
  logicValues String?
}

model LogicField {
  id           String        @id @default(uuid())
  name         String
  sectionId    String
  section      Section       @relation(fields: [sectionId], references: [id])
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  logicValues  String?
  calculations Calculation[]
}

model Calculation {
  id         String      @id @default(uuid())
  logicId    String
  type       String // "simple" | "conditional"
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  logicField LogicField  @relation(fields: [logicId], references: [id], onDelete: Cascade)
  operations String       @default("[]")
}

// model Operation {
//   id            String      @id @default(uuid())
//   operator      String // "add" | "subtract" | "multiply" | "divide" | "percentage"
//   calculationId String
//   calculation   Calculation @relation(fields: [calculationId], references: [id], onDelete: Cascade)
//   value1        String      @default("{}")
//   value2        String?     @default("{}")
// }
